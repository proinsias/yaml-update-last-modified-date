#!/usr/bin/env python
"""Set the last modified date in YAML front matter of edited markdown files.

Credit to Michael Rose (@mmistakes) for the basis of this script.
https://mademistakes.com/notes/adding-last-modified-timestamps-with-git/

Credit to ChatGPT for help converting it to python.
"""

import datetime as dt
import os
import subprocess
import tempfile

# Get a temporary file name to use in the script.
tmpfile = tempfile.mktemp()

# Get the current timestamp.
last_modified_at = dt.datetime.now(dt.timezone.utc).strftime('%Y-%m-%d %H:%M:%S')

# Use Git to get a list of modified Markdown files.
git_output = subprocess.check_output(['git', 'diff', '--cached', '--name-status']).decode()
modified_files = [line.split('\t')[1] for line in git_output.splitlines() if line.startswith('A') or line.startswith('M') and line.endswith('.md')]

# Update the last_modified_at field in each file.
for file in modified_files:
    with open(file, 'r') as f:
        lines = f.readlines()
    with open(tmpfile, 'w') as f:
        for line in lines:
            if line.startswith('last_modified_at:'):
                f.write(f'last_modified_at: {last_modified_at}\n')
            else:
                f.write(line)
    os.replace(tmpfile, file)
    subprocess.check_call(['git', 'add', file])
    print(f'Updated modified date for {file}.')